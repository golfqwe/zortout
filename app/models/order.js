module.exports = (sequelize, DataTypes) => {
  const Order = sequelize.define('order', {
    id: {
      type: DataTypes.INTEGER,
      primaryKey: true,
      autoIncrement: false, // Automatically gets converted to SERIAL for postgres
    },
    ordertype: DataTypes.INTEGER,
    number: DataTypes.TEXT,
    customerid: DataTypes.STRING,
    customername: DataTypes.STRING,
    customercode: DataTypes.STRING,
    customeridnumber: DataTypes.STRING,
    customeremail: DataTypes.STRING,
    customerphone: DataTypes.STRING,
    customeraddress: DataTypes.TEXT,
    customerpostcode: DataTypes.STRING,
    customerprovince: DataTypes.STRING,
    customerdistrict: DataTypes.STRING,
    customersubdistrict: DataTypes.STRING,
    customerstreetAddress: DataTypes.TEXT,
    customerbranchname: DataTypes.STRING,
    customerbranchno: DataTypes.STRING,
    facebookname: DataTypes.STRING,
    facebookid: DataTypes.STRING,
    line: DataTypes.STRING,
    lineid: DataTypes.STRING,
    reference: DataTypes.STRING,
    warehousecode: DataTypes.STRING,
    status: DataTypes.STRING,
    paymentstatus: DataTypes.STRING,
    marketplacename: DataTypes.STRING,
    marketplaceshippingstatus: DataTypes.STRING,
    marketplacepayment: DataTypes.STRING,
    amount: DataTypes.FLOAT,
    vatamount: DataTypes.FLOAT,
    shippingvat: DataTypes.INTEGER,
    shippingchannel: DataTypes.STRING,
    shippingamount: DataTypes.INTEGER,
    shippingdate: DataTypes.DATE,
    shippingdateString: DataTypes.DATE,
    shippingname: DataTypes.STRING,
    shippingaddress: DataTypes.TEXT,
    shippingphone: DataTypes.STRING,
    shippingemail: DataTypes.STRING,
    shippingpostcode: DataTypes.STRING,
    shippingprovince: DataTypes.STRING,
    shippingdistrict: DataTypes.STRING,
    shippingsubdistrict: DataTypes.STRING,
    shippingstreetAddress: DataTypes.TEXT,
    trackingno: DataTypes.STRING,
    orderdate: DataTypes.STRING,
    orderdateString: DataTypes.STRING,
    paymentamount: DataTypes.FLOAT,
    description: DataTypes.TEXT,
    discount: DataTypes.STRING,
    platformdiscount: DataTypes.FLOAT,
    sellerdiscount: DataTypes.FLOAT,
    shippingdiscount: DataTypes.FLOAT,
    discountamount: DataTypes.FLOAT,
    voucheramount: DataTypes.FLOAT,
    vattype: DataTypes.INTEGER,
    saleschannel: DataTypes.STRING,
    vatpercent: DataTypes.INTEGER,
    createdby: DataTypes.STRING,
    createusername: DataTypes.STRING,
    createuserid: DataTypes.INTEGER,
    sharelink: DataTypes.STRING,
    isCOD: DataTypes.BOOLEAN,
    createdatetime: DataTypes.STRING,
    createdatetimeString: DataTypes.STRING,
    updatedatetime: DataTypes.STRING,
    updatedatetimeString: DataTypes.STRING,
    expiredate: DataTypes.STRING,
    expiredateString: DataTypes.STRING,
    receivedate: DataTypes.STRING,
    receivedateString: DataTypes.STRING,
    integrationName: DataTypes.STRING,
    integrationShop: DataTypes.STRING,
    agent: DataTypes.STRING,
    uniquenumber: DataTypes.STRING,
    properties: DataTypes.STRING,
    isDeposit: DataTypes.BOOLEAN,
    sell_vat_status: DataTypes.INTEGER,
    purchase_vat_status: DataTypes.INTEGER,
    integrationCustomer: DataTypes.TEXT,
    totalproductamount: DataTypes.FLOAT,
  });

  return Order;
};
